
yyz_romance_opinion_modifier = {
  value = 0
  if = {
    limit = { scope:recipient = { save_temporary_opinion_value_as = { name = character_opinion target = scope:actor } } }
    add = {
      value = scope:character_opinion
      multiply = 1.5
      divide = 5
      floor = yes
    }
  }
  multiply = 5
  min = -50
  max = 50
}

yyz_romance_success_chance = {
  value = 0

  # You got a wedding night memento
  if = {
    limit = { scope:actor = { exists = var:wnight_court_memento_var  var:wnight_court_memento_var = scope:recipient } }
    add = 20
    desc = "SCHEME_WNIGHT_COURT_MEMENTO"
  }

  if = {
    limit = { scope:actor = { has_character_modifier = hopeless_romantic_modifier } }
    add = 10
    desc = hopeless_romantic_modifier
  }
  
  #Language
  if = {
    limit = { scope:actor = { knows_language_of_culture = scope:recipient.culture } }
    add = 5
    desc = YOU_SPEAK_THE_LANGUAGE
  }

  #Gallant
  if = {
    limit = { scope:actor = { has_trait = gallant } }
    add = 30
    desc = "SCHEME_GALLANT_TRAIT"
  }

  #Beauty good
  if = {
    limit = { scope:actor = { has_trait = beauty_good_1 } }
    add = 10
    desc = "scheme_beauty_good_1"
  }
  if = {
    limit = { scope:actor = { has_trait = beauty_good_2 } }
    add = 15
    desc = "scheme_beauty_good_2"
  }
  if = {
    limit = { scope:actor = { has_trait = beauty_good_3 } }
    add = 20
    desc = "scheme_beauty_good_3"
  }

  #Physique good
  if = {
    limit = { scope:actor = { has_trait = physique_good_1 } }
    add = 5
    desc = "scheme_physique_good_1"
  }
  if = {
    limit = { scope:actor = { has_trait = physique_good_2 } }
    add = 10
    desc = "scheme_physique_good_2"
  }
  if = {
    limit = { scope:actor = { has_trait = physique_good_3 } }
    add = 15
    desc = "scheme_physique_good_3"
  }

  #Beauty bad
  if = {
    limit = { scope:actor = { has_trait = beauty_bad_1 } }
    add = -10
    desc = "scheme_beauty_bad_1"
  }
  if = {
    limit = { scope:actor = { has_trait = beauty_bad_2 } }
    add = -15
    desc = "scheme_beauty_bad_2"
  }
  if = {
    limit = { scope:actor = { has_trait = beauty_bad_3 } }
    add = -20
    desc = "scheme_beauty_bad_3"
  }

  #TARGET

  #Does their spouse have a strong hook on them?
  if = {
    limit = {
      scope:actor = { NOT = { is_consort_of = scope:recipient } }
      scope:recipient = {
        exists = primary_spouse
        OR = {
          primary_spouse = { has_strong_hook = scope:recipient }
          has_trait = loyal
        }
      }
    }
    add = -100
    desc = SCHEME_SEDUCE_SPOUSE_STRONG_HOOK_PENALTY
  }

  #Opinion of owner
  add = yyz_romance_opinion_modifier 
  desc = AI_OPINION_REASON

#  add = yyz_romance_opinion_modifier_kludge

  #Trait similitarity to owner
  add = yyz_romance_compatibility_modifier_kludge

  #Rank tier difference (landed target/target whose liege doesn't care)
  if = { #3 or more higher rank
    limit = {
      scope:recipient = { personal_scheme_success_compare_target_liege_tier_trigger = no  NOT = { is_theocratic_lessee = yes } }
      scope:actor = { tier_difference = { target = scope:recipient value >= 3 } }
    }
    add = 20
    desc = "HIGHER_RANK_THAN_SCHEME_TARGET"
  }
  if = { #2 higher rank
    limit = {
      scope:recipient = { personal_scheme_success_compare_target_liege_tier_trigger = no  NOT = { is_theocratic_lessee = yes } }
      scope:actor = { tier_difference = { target = scope:recipient value = 2 } }
    }
    add = 10
    desc = "HIGHER_RANK_THAN_SCHEME_TARGET"
  }
  if = { #1 higher rank
    limit = {
      scope:recipient = { personal_scheme_success_compare_target_liege_tier_trigger = no  NOT = { is_theocratic_lessee = yes } }
      scope:actor = { tier_difference = { target = scope:recipient value = 1 } }
    }
    add = 5
    desc = "HIGHER_RANK_THAN_SCHEME_TARGET"
  }
  if = { #1 lower rank
    limit = {
      scope:recipient = { personal_scheme_success_compare_target_liege_tier_trigger = no  NOT = { is_theocratic_lessee = yes } }
      scope:actor = { tier_difference = { target = scope:recipient value = -1 } }
    }
    add = -5
    desc = "LOWER_RANK_THAN_SCHEME_TARGET"
  }
  if = { #2 lower rank
    limit = {
      scope:recipient = { personal_scheme_success_compare_target_liege_tier_trigger = no  NOT = { is_theocratic_lessee = yes } }
      scope:actor = { tier_difference = { target = scope:recipient value = -2 } }
    }
    add = -10
    desc = "LOWER_RANK_THAN_SCHEME_TARGET"
  }
  if = { #3 or less lower rank
    limit = {
      scope:recipient = { personal_scheme_success_compare_target_liege_tier_trigger = no  NOT = { is_theocratic_lessee = yes } }
      scope:actor = { tier_difference = { target = scope:recipient value <= -3 } }
    }
    add = -20
    desc = "LOWER_RANK_THAN_SCHEME_TARGET"
  }

  #Rank tier difference (unlanded character)
  if = { #3 or more higher rank
    limit = {
      scope:recipient = { personal_scheme_success_compare_target_liege_tier_trigger = yes  NOT = { is_theocratic_lessee = yes } }
      scope:actor = { tier_difference = { target = scope:recipient.liege value >= 3 } }
    }
    add = 50
    desc = "HIGHER_RANK_THAN_SCHEME_TARGET_LIEGE"
  }
  if = {
    limit = {
   #2 higher rank
      scope:recipient = {
        personal_scheme_success_compare_target_liege_tier_trigger = yes
        NOT = {
          is_theocratic_lessee = yes
        }
      }
      scope:actor = {
        tier_difference = {
          target = scope:recipient.liege
          value = 2
        }
      }
    }
    add = 25
    desc = "HIGHER_RANK_THAN_SCHEME_TARGET_LIEGE"
  }
  if = {
    limit = {
   #1 higher rank
      scope:recipient = {
        personal_scheme_success_compare_target_liege_tier_trigger = yes
        NOT = {
          is_theocratic_lessee = yes
        }
      }
      scope:actor = {
        tier_difference = {
          target = scope:recipient.liege
          value = 1
        }
      }
    }
    add = 10
    desc = "HIGHER_RANK_THAN_SCHEME_TARGET_LIEGE"
  }
  if = {
    limit = {
   #1 lower rank
      scope:recipient = {
        personal_scheme_success_compare_target_liege_tier_trigger = yes
      }
      scope:actor = {
        tier_difference = {
          target = scope:recipient.liege
          value = -1
        }
      }
    }
    add = -10
    desc = "LOWER_RANK_THAN_SCHEME_TARGET_LIEGE"
  }
  if = {
    limit = {
   #2 lower rank
      scope:recipient = {
        personal_scheme_success_compare_target_liege_tier_trigger = yes
      }
      scope:actor = {
        tier_difference = {
          target = scope:recipient.liege
          value = -2
        }
      }
    }
    add = -25
    desc = "LOWER_RANK_THAN_SCHEME_TARGET_LIEGE"
  }
  if = {
    limit = {
   #3 or less lower rank
      scope:recipient = {
        personal_scheme_success_compare_target_liege_tier_trigger = yes
      }
      scope:actor = {
        tier_difference = {
          target = scope:recipient.liege
          value <= -3
        }
      }
    }
    add = -50
    desc = "LOWER_RANK_THAN_SCHEME_TARGET_LIEGE"
  }

  # Diarchs are better at schemes within their liege's realm
#  diarch_scheming_within_realm_bonus_modifier = yes

  #Gubermint difference
  if = {
    limit = {
   #3 or more higher rank
      exists = scope:recipient.court_owner
      scope:recipient.court_owner = {
        NOT = { government_has_flag = government_is_tribal }
      }
      scope:actor = { government_has_flag = government_is_tribal }
    }
    add = -50
    desc = "TRIBE_ROMANCING_OTHER_GOVERNMENTS"
  }

  #Religious Heads
  if = {
    limit = {
      scope:recipient = {
        faith = scope:actor.faith
        faith = {
          exists = religious_head
          religious_head = {
             this = scope:recipient
           }
        }
      }
    }
    add = -50
    desc = "SCHEME_VS_RELIGIOUS_HEAD"
  }

  #Taboo
  if = {
    limit = {
   #Incest is taboo (norms & consequences)
      scope:recipient = {
        relation_with_character_is_incestuous_in_my_or_lieges_faith_trigger = { CHARACTER = scope:actor }
      }
      scope:actor = {
        # The Subtle Desire Perk nullifies this
        NOT = { has_perk = subtle_desire_perk }
        # being already a lover with the target nulifies it
        NOT = { has_relation_lover = scope:recipient }
      }
    }
    add = -25
    desc = SCHEME_SEDUCE_TABOO_INCEST
  }
  if = {
    limit = {
   #Character is not willing to engage in incest with scope:actor
      scope:recipient = {
        NOT = {
          is_consort_of = scope:actor
        }
        is_close_or_extended_family_of = scope:actor
        NOR = {
          accepts_incest_with_trigger = { CHARACTER = scope:actor } #100% fine with incest with owner
          scope:actor = { has_perk = subtle_desire_perk }  # The Subtle Desire Perk nullifies this
          guaranteed_under_20_incest_rejection_trigger = { # handled by hard block modifier
            TARGET = scope:recipient
            SEDUCER = scope:actor
          }
        }
      }
    }
    add = {
      if = {
        limit = { scope:recipient = { is_close_family_of = scope:actor } }
        value = -40
      }
      else_if = {
        limit = { scope:recipient = { is_extended_family_of = scope:actor } }
        value = -15
      }
      if = {
        limit = { scope:recipient = { is_deviant_trigger = yes } }
        add = 15
      }
    }
    desc = SCHEME_SEDUCE_UNWILLING_INCEST
  }
  #Sodomy
  if = {
    limit = {
      scope:recipient = {
        relation_with_character_is_sodomy_in_my_or_lieges_faith_trigger = { CHARACTER = scope:actor }
        NOT = { freely_accepts_sodomy_with_trigger = { CHARACTER = scope:actor } }
      }
    }
    add = -20
    desc = SCHEME_SEDUCE_TABOO_SODOMY
  }
  
  # Tradition
  if = {
    limit = {
      scope:actor = {
        has_trait = poet
        culture = {
          has_cultural_parameter = poet_trait_romance_bonuses
        }
      }
    }
    add = 40
    desc = SCHEME_TRAIT_POET
  }

  # Courtship Perk
  if = {
    limit = {
      scope:actor = {
        has_perk = courtship_perk
      }
    }
    add = courtship_court_success_chance_bonus_value
    desc = SCHEME_COURTSHIP_PERK
  }

  # Dynasty Kin Personal Scheme Success Chance on Dynasty Perk
  if = {
    limit = {
      exists = scope:actor.dynasty
      scope:actor.dynasty = {
        has_dynasty_perk = kin_legacy_4
      }
      scope:recipient.dynasty = scope:actor.dynasty
    }
    add = kin_legacy_4_success_chance
    desc = KIN_LEGACY_DESC
  }

  # House Personal Scheme Success Chance on Cultural Parameter
  if = {
    limit = {
      exists = scope:actor.house
      exists = scope:recipient.house
      scope:actor.culture = { has_cultural_parameter = cultural_house_personal_scheme_success_chance }
      scope:recipient.house = scope:actor.house
    }
    add = cultural_house_personal_scheme_success_chance
    desc = KIN_PARAMETER_DESC
  }

  # House Personal Scheme Success Chance on Cultural Parameter
  if = {
    limit = {
      exists = scope:actor.house
      exists = scope:recipient.house
      scope:actor.culture = { has_cultural_parameter = cultural_house_personal_scheme_success_chance }
      scope:recipient.house = scope:actor.house
    }
    add = cultural_house_personal_scheme_success_chance
    desc = KIN_PARAMETER_DESC
  }

  # Spouse Scheme Success Chance on Cultural Parameter
  if = {
    limit = {
      scope:actor = { is_spouse_of = scope:recipient }
      scope:actor.culture = { has_cultural_parameter = romance_scheme_bonus_vs_spouse }
    }
    add = 30
    desc = SPOUSE_PARAMETER_DESC
  }

  # Thicker Than Water Perk
  if = {
    limit = {
      scope:actor = { has_perk = thicker_than_water_perk }
      scope:recipient = { is_close_or_extended_family_of = scope:actor }
    }
    add = thicker_than_water_bonus
    desc = BEFRIEND_THICKER_THAN_WATER_PERK_DESC
  }

  #Family Feud
#  house_feud_sway_scheme_success_modifier = yes

# yyz - not in court_scheme script but needed

# poet trait for owner
  if = {
    limit = { scope:actor = { has_trait = poet } }
    add = 10
#    desc = SCHEME_TRAIT_POET_PERSONAL_SCHEME_BONUS
  }

# paranoid trait for target
  if = {
    limit = { scope:recipient = { has_trait = paranoid } }
    add = -25
#    desc = SCHEME_TRAIT_PARANOID_PENALTY
  }

  min = 0
  max = 100

}

#  opinion_modifier = {
#    who = scope:recipient            = this
#    opinion_target = scope:actor  = prev
#    min = -50
#    max = 50
#    multiplier = 1.5
#    step = 5
yyz_romance_opinion_modifier_kludge = {
  value = 0
  scope:recipient = {
    if = { limit = { opinion = { target = scope:actor value >=  34 } } add =  5 }
    if = { limit = { opinion = { target = scope:actor value >=  30 } } add =  5 }
    if = { limit = { opinion = { target = scope:actor value >=  27 } } add =  5 }
    if = { limit = { opinion = { target = scope:actor value >=  24 } } add =  5 }
    if = { limit = { opinion = { target = scope:actor value >=  20 } } add =  5 }
    if = { limit = { opinion = { target = scope:actor value >=  17 } } add =  5 }
    if = { limit = { opinion = { target = scope:actor value >=  14 } } add =  5 }
    if = { limit = { opinion = { target = scope:actor value >=  10 } } add =  5 }
    if = { limit = { opinion = { target = scope:actor value >=   7 } } add =  5 }
    if = { limit = { opinion = { target = scope:actor value >=   4 } } add =  5 }
    if = { limit = { opinion = { target = scope:actor value <= -34 } } add = -5 }
    if = { limit = { opinion = { target = scope:actor value <= -30 } } add = -5 }
    if = { limit = { opinion = { target = scope:actor value <= -27 } } add = -5 }
    if = { limit = { opinion = { target = scope:actor value <= -24 } } add = -5 }
    if = { limit = { opinion = { target = scope:actor value <= -20 } } add = -5 }
    if = { limit = { opinion = { target = scope:actor value <= -17 } } add = -5 }
    if = { limit = { opinion = { target = scope:actor value <= -14 } } add = -5 }
    if = { limit = { opinion = { target = scope:actor value <= -10 } } add = -5 }
    if = { limit = { opinion = { target = scope:actor value <=  -7 } } add = -5 }
    if = { limit = { opinion = { target = scope:actor value <=  -4 } } add = -5 }
  }
}

#  compatibility_modifier = {
#    who = scope:recipient
#    compatibility_target = scope:actor
#    min = -100
#    max = 80
#    multiplier = 3
#  }
yyz_romance_compatibility_modifier_kludge = {
  value = 0
  scope:recipient = {
    if = { limit = { trait_compatibility = { target = scope:actor value < -33 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -32 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -31 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -30 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -29 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -28 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -27 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -26 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -25 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -24 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -23 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -22 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -21 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -20 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -19 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -18 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -17 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -16 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -15 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -14 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -13 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -12 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -11 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value < -10 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value <  -9 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value <  -8 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value <  -7 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value <  -6 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value <  -5 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value <  -4 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value <  -3 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value <  -2 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value <  -1 } } add = -1 }
    if = { limit = { trait_compatibility = { target = scope:actor value <   0 } } add = -1 }

    if = { limit = { trait_compatibility = { target = scope:actor value >   0 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >  26 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >  25 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >  24 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >  23 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >  22 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >  21 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >  20 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >  19 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >  18 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >  17 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >  16 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >  15 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >  14 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >  13 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >  12 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >  11 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >  10 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >   9 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >   8 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >   7 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >   6 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >   5 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >   4 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >   3 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >   2 } } add =  1 }
    if = { limit = { trait_compatibility = { target = scope:actor value >   1 } } add =  1 }
  }
  multiply = 3
  min = -100
  max = 80
}