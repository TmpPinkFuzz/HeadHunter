
template HeadHunter_Drag_Line {
  width = 2

  color = { 1 1 1 0.5 }

  texture = "gfx/lines/line_mask.dds"
  uv_scale = { 1.0 1.0 }

  mask = "gfx/lines/mask.dds"
  mask_uv_scale = { 0.1 1.0 }
}

template yyz_skill_grid_text
{
  parentanchor = center
  margin_bottom = 4
  align = center
}

template yyz_invite_button
{
  button_icon = {
    name = "button_invite"
    datacontext = "[GetScriptedGui('yyz_canInvite')]"
    texture = "gfx/interface/icons/character_interactions/guest.dds"
    visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( Character.MakeScope ).AddScope( 'actor', GetPlayer.MakeScope ).End)]"
    onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Character.MakeScope ).AddScope( 'actor', GetPlayer.MakeScope ).End)]"
    size = { 20 20 }
  }
}

template yyz_pin_unpin
{
  button_pin = {
    name = "button_pin"
    size = { 20 20 }
    visible = "[Not(Character.IsPinned)]"
    onclick = "[Character.ToggleCharacterPinned]"
    tooltip = "PIN_TT"
    using = tooltip_se
  }

  button_unpin = {
    name = "button_unpin"
    size = { 20 20 }
    visible = "[Character.IsPinned]"
    onclick = "[Character.ToggleCharacterPinned]"
    tooltip = "PIN_TT"
    using = tooltip_se
  }
  
  button_icon = {
    name = "button_gold_gold"
    datacontext = "[GetScriptedGui('yyz_gold_gold')]"
    texture = "gfx/interface/icons/character_interactions/icon_gold.dds"
    visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( Character.MakeScope ).AddScope( 'actor', GetPlayer.MakeScope ).End)]"
    onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Character.MakeScope ).AddScope( 'actor', GetPlayer.MakeScope ).End)]"
    size = { 20 20 }
  }
}

template yyz_skill_grid_background
{
  name = "skill_icon_bg"
  texture = "gfx/interface/window_character/character_view_skills_bg.dds"
  framesize = { 70 26 }
  margin = { 5 0 }
}

template filter_sex
{
  yyz_toolbar_button = {
    name = "btn_filterSex_male"
    datacontext = "[GetScriptedGui('yyz_filterSexMale_toggle')]"
    tooltip = "YYZ_FILTER_SEX_MALE_TT"
    blockoverride "icon" {
      texture = "gfx/interface/icons/hh_male.dds"
      size = { 24 24 }
    }
  }

  yyz_toolbar_button = {
    name = "btn_filterSex_female"
    datacontext = "[GetScriptedGui('yyz_filterSexFemale_toggle')]"
    tooltip = "YYZ_FILTER_SEX_FEMALE_TT"
    blockoverride "icon" {
      texture = "gfx/interface/icons/hh_female.dds"
      size = { 24 24 }
    }
  }

  spacer = { size = { 6 0 } }
}

template filter_where
{
  yyz_button = {
    size = { 24 32 }
    name = "btn_filterWhere_not"
    text = "YYZ_FILTER_WHERE_NOT"
    datacontext = "[GetScriptedGui('yyz_filterWhereNot_toggle')]"
    tooltip = "YYZ_FILTER_WHERE_NOT_TT"
  }

  yyz_button = {
    size = { 58 32 }
    name = "btn_filterWhere_realm"
    text = "YYZ_FILTER_WHERE_REALM"
    datacontext = "[GetScriptedGui('yyz_filterWhereRealm_toggle')]"
    tooltip = "YYZ_FILTER_WHERE_REALM_TT"
  }

  yyz_button = {
    size = { 58 32 }
    name = "btn_filterWhere_court"
    text = "YYZ_FILTER_WHERE_COURT"
    datacontext = "[GetScriptedGui('yyz_filterWhereCourt_toggle')]"
    tooltip = "YYZ_FILTER_WHERE_COURT_TT"
  }
  spacer = { size = { 6 0 } }
}

template filter_marital
{
  yyz_button = {
    size = { 64 32 }
    name = "btn_filterMarital_married"
    text = "YYZ_FILTER_MARITAL_MARRIED"
    datacontext = "[GetScriptedGui('yyz_filterMaritalMarried_toggle')]"
    tooltip = "YYZ_FILTER_MARITAL_MARRIED_TT"
  }

  yyz_button = {
    size = { 78 32 }
    name = "btn_filterMarital_unmarried"
    text = "YYZ_FILTER_MARITAL_UNMARRIED"
    datacontext = "[GetScriptedGui('yyz_filterMaritalUnmarried_toggle')]"
    tooltip = "YYZ_FILTER_MARITAL_UNMARRIED_TT"
  }                   
  spacer = { size = { 6 0 } }
}

template filter_nobility
{
  yyz_button = {
    size = { 64 32 }
    name = "btn_filterNobilityNoble_toggle"
    text = "YYZ_FILTER_NOBILITY_NOBLE"
    datacontext = "[GetScriptedGui('yyz_filterNobilityNoble_toggle')]"
    tooltip = "YYZ_FILTER_NOBILITY_NOBLE_TT"
  }

  yyz_button = {
    size = { 78 32 }
    name = "btn_filterNobilityLowborn_toggle"
    text = "YYZ_FILTER_NOBILITY_LOWBORN"
    datacontext = "[GetScriptedGui('yyz_filterNobilityLowborn_toggle')]"
    tooltip = "YYZ_FILTER_NOBILITY_LOWBORN_TT"
  }                   
  spacer = { size = { 6 0 } }
}

template filter_invite
{
  yyz_button = {
    size = { 66 32 }
    name = "btn_filterInvite"
    text = "YYZ_FILTER_INVITE"
    datacontext = "[GetScriptedGui('yyz_filterInvite_toggle')]"
    tooltip = "YYZ_FILTER_INVITE_TT"
  }
  spacer = { size = { 6 0 } }
}

template filter_rank
{
  yyz_button = {
    size = { 66 32 }
    name = "btn_filterRank_count"
    text = "YYZ_FILTER_RANK_COUNT"
    datacontext = "[GetScriptedGui('yyz_filterRank_count')]"
    tooltip = "YYZ_FILTER_RANK_COUNT_TT"
  }
  yyz_button = {
    size = { 66 32 }
    name = "btn_filterRank_duke"
    text = "YYZ_FILTER_RANK_DUKE"
    datacontext = "[GetScriptedGui('yyz_filterRank_duke')]"
    tooltip = "YYZ_FILTER_RANK_DUKE_TT"
  }
  yyz_button = {
    size = { 66 32 }
    name = "btn_filterRank_king"
    text = "YYZ_FILTER_RANK_KING"
    datacontext = "[GetScriptedGui('yyz_filterRank_king')]"
    tooltip = "YYZ_FILTER_RANK_KING_TT"
  }
  yyz_button = {
    size = { 66 32 }
    name = "btn_filterRank_emperor"
    text = "YYZ_FILTER_RANK_EMPEROR"
    datacontext = "[GetScriptedGui('yyz_filterRank_emperor')]"
    tooltip = "YYZ_FILTER_RANK_EMPEROR_TT"
  }
  spacer = { size = { 6 0 } }
}

types yyz_ui_types {
  
  type yyz_header_text = text_single {
    name = "header_text"

    using = Font_Type_Flavor
    using = Font_Size_Big
    margin_left = 10
  }

  #######################################################################################
  # used for the 0 0 size hidden buttons backing the shortcut keys to get our window open
  #######################################################################################
  type yyz_character_list_shortcut = button_normal {
    block "command" {
      datacontext = "[GetScriptedGui('open_yyz_YYZ_list')]"                   
    }
    
    block "cmd_key" {
      shortcut = "NO_DEFAULT_KEY"
    }
    onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
  }

  ##############################################################################################
  # used by our main toolbar - hopefully this will get merged into one of the other button types
  ############################################################################################## 
#  type yyz_toolbar_button = button_hud_character_bar {

  type yyz_toolbar_button = button_standard_hover {
    size = { 32 32 }

    button = {
      size = { 32 32 }
      block "icon" {
        texture = "gfx/interface/icons/flat_icons/dynasty.dds"
        size = { 32 32 }
      }
      alwaystransparent = yes
      parentanchor = center
    }
    using = tooltip_nw
    onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
    visible = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
    down    = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
  }

  type yyz_button = button_standard_hover {
    using = tooltip_nw
    onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
    visible = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
    down    = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
  }

  type HeadHunter_invoke_button = window {
    movable = yes

    block "position" {
      parentanchor = bottom|right
      position = { -10 -10 }
    }

    size = { 40 68 }
    allow_outside = yes
    visible = yes

    HeadHunter_drag_icon = {
      name = "HeadHunter_drag_icon"
      parentanchor = bottom
      position = { 5 -32 }

      visible = no
      using = Animation_ShowHide_Quick
    }

    using = Animation_ShowHide_Quick

    onmousehierarchyenter = "[PdxGuiWidget.FindChild('HeadHunter_drag_icon').Show]"
    onmousehierarchyleave = "[PdxGuiWidget.FindChild('HeadHunter_drag_icon').Hide]"

    vbox = {
      size = { 100% 100% }
      expand = {}

      parentanchor = bottom|right
      allow_outside = yes

      widget = {
        name = "HeadHunter_invoke_button"
        size = { 40 40 }

        button_round = {
          datacontext = "[GetScriptedGui('open_yyz_courtPositions_list')]"
          onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
          size = { 100% 100% }

          icon = {
            texture = "gfx/interface/buttons/button_lifestyles_base.dds"
            size = { 100% 100% }
          }

          icon = {
            name = "progress_frame"
            texture = "gfx/interface/progressbars/action_progress_frame.dds"
            size = { 100% 100% }
            parentanchor = center
            alpha = 1.0
          }
          icon = {
            texture = "gfx/interface/icons/lego.png"
#            texture = "gfx/interface/icons/icon_group_of_characters.png"
            size = { 32 32 }
            parentanchor = center
          }
          tooltip = HeadHunter_invoke_button_tooltip
          using = tooltip_e
        }
      }
    }
  }

  type HeadHunter_drag_icon = widget {
    size = { 32 32 }

    line = {
      from = { 6 12 }
      to = { 24 12 }
      using = HeadHunter_Drag_Line
    }
    line = {
      from = { 6 15 }
      to = { 24 15 }
      using = HeadHunter_Drag_Line
    }
    line = {
      from = { 6 18 }
      to = { 24 18 }
      using = HeadHunter_Drag_Line
    }
    line = {
      from = { 6 21 }
      to = { 24 21 }
      using = HeadHunter_Drag_Line
    }

    tooltip = HeadHunter_drag_icons_tooltip
    using = tooltip_ne
  }
}

types yyz_vanilla_overrides {
  type hboxEx = hbox {
    layoutpolicy_horizontal = expanding
    layoutpolicy_vertical = expanding
  }

  type vboxEx = vbox {
    layoutpolicy_horizontal = expanding
    layoutpolicy_vertical = expanding
  }

  type yyz_vbox_character_list = vbox {
    name = "yyz_character_list"
    spacing = 0   # yyz
    allow_outside = no
    margin_left = -14 # yyz - pushing left side further left
    block "sort_buttons"
    {
      yyz_hbox_list_sort_buttons = {
        layoutpolicy_horizontal = expanding
      }
    }

    block "special_character" {}

    scrollbox = {
      name = "yyz_characters_scroll_area"
      layoutpolicy_vertical = expanding
      layoutpolicy_horizontal = expanding

      blockoverride "scrollbox_content" {
        block "container_implementation" {
          vbox = {                
            name = "characters_grid"
            datamodel = "[GetPlayer.MakeScope.GetList('yyz_list')]"
#            visible = "[GetScriptedGui('yyz_window').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
            layoutpolicy_horizontal = expanding
             
            item = {
              yyz_widget_character_finder_list_item = {
#                visible = "[EqualTo_CFixedPoint( GuiScope.SetRoot(GetPlayer.MakeScope).ScriptValue('yyz_content_mode'), '(CFixedPoint)0')]"
                datacontext = "[Scope.GetCharacter]"
                block "item_size" {
                  size = { -1 90 }  # yyz reduced from 110
                  layoutpolicy_horizontal = expanding
                }
              }
            }
          }
        }
      }
      blockoverride "scrollbox_empty" { }
    }
  }

  ##########################################################
  # used by yyz_hbox_skills_grid
  type yyz_skill_display_widget = widget {
    size = { 32 25 }

    text_single = {
      parentanchor = center
      margin_bottom = 4
      align = center
      block "skill_name" { text = "[Character.GetSkill( 'martial' )]" }
    }
  }

  ##########################################################
  # used by yyz_hbox_skills_grid
  type yyz_vanilla_skill_display_widget = yyz_skill_display_widget {
    background = { 
      name = "skill_icon_bg"
      texture = "gfx/interface/window_character/character_view_skills_bg.dds"
      framesize = { 70 26 }
      margin = { 5 0 }
      block "frame_num" { frame = 5 }
    }
  }

  ##########################################################
  # skills grid colored stat display with prowess added
  type yyz_hbox_skills_grid = hbox {
    name = "yyz_skills_grid"
    minimumsize = { 160 0 }

    yyz_vanilla_skill_display_widget = { 
      blockoverride "skill_name" { text = "[Character.GetSkill( 'diplomacy' )]" }
      blockoverride "frame_num" { frame = 1 }
    }
    yyz_vanilla_skill_display_widget = { 
      blockoverride "skill_name" { text = "[Character.GetSkill( 'martial' )]" }
      blockoverride "frame_num" { frame = 2 }
    }
    yyz_vanilla_skill_display_widget = { 
      blockoverride "skill_name" { text = "[Character.GetSkill( 'stewardship' )]" }
      blockoverride "frame_num" { frame = 3 }
    }
    yyz_vanilla_skill_display_widget = { 
      blockoverride "skill_name" { text = "[Character.GetSkill( 'intrigue' )]" }
      blockoverride "frame_num" { frame = 4 }
    }
    yyz_vanilla_skill_display_widget = { 
      blockoverride "skill_name" { text = "[Character.GetSkill( 'learning' )]" }
      blockoverride "frame_num" { frame = 5 }
    }
    yyz_skill_display_widget = { 
      blockoverride "skill_name" { text = "[Character.GetSkill( 'prowess' )]" }
      background = {
        name = "skill_icon_bg"
        texture = "gfx/interface/window_character/character_view_prowess_bg.dds"
        framesize = { 32 32 }
        margin = { 4 0 }
      }
    }
  }

  #####################################################################################################################
  # top line of character data, displays invite button, pin button, name, relationship, age, health, and skill values
  #####################################################################################################################
  type yyz_character_name_and_relation = hbox {
    margin_left = 0
    layoutpolicy_horizontal = expanding
#              maximumsize = { 338 -1 }  # yyz - removed to get skill values and age/health hbox to align to far right

    using = yyz_invite_button
    using = yyz_pin_unpin

    text_single = {
      using = Font_Size_Medium
      layoutpolicy_horizontal = expanding
      align = nobaseline
      text = "[Character.GetUINameNoTooltip]"
      autoresize = no
      fontsize_min = 14
    }

    block "character_relation"
    {
      hbox = {
        visible = "[And(Character.HasRelationTo( GetPlayer ), Not(Character.IsPlayer))]"
        text_single = {
#                    text = "•"
          align = nobaseline
          margin = { 5 0 }
        }

        text_single = {
          name = "character_relation"
          text = "[Character.GetRelationToString( GetPlayer )]"
          default_format = "#low"
          align = nobaseline
          fontsize_min = 14
          max_width = 180
        }
      }
    }
    expand = {}
  }

  type yyz_wide_character_hbox = hbox {
    ### character portrait
    layoutpolicy_horizontal = expanding
    vbox = {                                           # left side - portrat
      layoutpolicy_vertical = expanding
      portrait_head_small = {}
    
      expand = {}
    }
    block "button_content"
    {
      hboxEx = {
        margin_top = 2
        vboxEx = {           
          hbox = {           # top line of item, contains invite button, pin, name, age, relationship, followed by the health, age, then skills display
            layoutpolicy_horizontal = expanding
            margin = { 0 1 }
            background = { using = Background_Area_Characterlist }
    
            background = {
              using = Background_Area_Dark
              modify_texture = {
                texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
                blend_mode = alphamultiply
                alpha = 1
                rotate_uv = -90
              }
            }
    
            yyz_character_name_and_relation = { }            
            hbox = { using = character_age_or_death_text }
    
            # Skills
            yyz_hbox_skills_grid = {}
          }
    
          hboxEx = {   # bottom portion of item, contains CoA, traits, then a panel for faith, culture, and our additions
            vbox = {   # CoA and traits                           
              layoutpolicy_horizontal = expanding
    
              block "additional_info_kill_list" {}
    
              hbox = {
                layoutpolicy_horizontal = expanding
    
                # Dynasty
                widget = {
                  size = { 45 40 }
    
                  coa_house_small = {
                    datacontext = "[Character.GetHouse]"
                    parentanchor = center
                    scale = 0.7
                  }
                }
    
                # Traits
                yyz_character_presentation_traits = { }
                expand = {}
              }
            }
            vbox = {    # center info panel
              layoutpolicy_horizontal = preferred
              text_single = { 
                text = "[GuiScope.SetRoot( Character.MakeScope).AddScope( 'actor', GetPlayer.MakeScope ).AddScope( 'recipient', Character.MakeScope ).ScriptValue('yyz_centerPanelValue')]%" 
                fontsize = 18
              }
              tooltip = "[GuiScope.SetRoot( Character.MakeScope ).AddScope( 'actor', GetPlayer.MakeScope ).AddScope( 'recipient', Character.MakeScope ).GetScriptValueDesc('yyz_centerPanelValue')]"
              visible = "[GetScriptedGui( 'yyz_centerPanel' ).IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
            }
            vboxEx = {
              datacontext = "[Scope.GetCharacter]"
    
              block "bottom_right_box"
              {
                hboxEx = {
                  max_width = 180
                  background = {
                    using = Background_Area_Dark
                    alpha = 0.5
                    margin = { 0 2 }
                  }
#                  yyz_widget_list_claims = {}
                  
                  vboxEx = {                                       # Religion and culture
                    hboxEx = {
                      margin_left = 2
                      margin_right = 4
                      spacing = 2
    
                      icon = {
                        name = "faith_button"
                        size = { 38 38 }
                        datacontext = "[Character.GetFaith]"
                        tooltipwidget = { faith_tooltip = {} }
                        using = tooltip_se
                        texture = "[Faith.GetIcon]"
                      }
    
                      hbox = {
                        datacontext = "[Character.GetCulture]"
                        layoutpolicy_horizontal = expanding
                        spacing = 3
    
                        tooltipwidget = {
                          culture_tooltip = {}
                        }
                        using = tooltip_se
    
# yyz:  seriously, what is the purpose of the culture icon here at all?
#  
#                       icon = {
#                         name = "culture"
#                         texture = "gfx/interface/icons/icon_culture.dds"
#                         size = { 24 24 }
#                       }
   
                        text_single = {
                          layoutpolicy_horizontal = expanding
                          text = "CULTURE_LISTS_WINDOW"
                          autoresize = no
                          align = nobaseline
                        }
                      }
                    }
                    hbox = {
                      visible = "[GetScriptedGui( 'yyz_speedPanel' ).IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                      margin_left = -60
                      size = { 0 22 }
                      spacing = 2
                      text_single = {              
                        align = left
                        fontsize = 13
                        text = "YYZ_ARMY_SPEED_DISPLAY"
                        tooltip = "[GuiScope.SetRoot( Character.MakeScope ).AddScope( 'actor', GetPlayer.MakeScope ).GetScriptValueDesc('yyz_movement_speed')]"
                      }
                      text_single = {              
                        align = left
                        fontsize = 13
                        text = "YYZ_TRAVEL_SPEED_DISPLAY"
                        tooltip = "[Character.GetTravelSpeedAptitudeBreakdown]"
                      }
                      text_single = {              
                        align = left
                        fontsize = 13
                        text = "YYZ_TRAVEL_SAFETY_DISPLAY"
                        tooltip = "[Character.GetTravelSafetyAptitudeBreakdown]"
                      } 
                    }
                  }
                  vbox = {
                    visible = "[GetScriptedGui( 'yyz_currencyPanel' ).IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
   
                    datacontext = "[Character]"
                    layoutpolicy_horizontal = fixed
                    margin_left = 0
                    margin_right = 0
                    margin_top = 0
                    margin_bottom = 0
                                
                    max_width = 50
                    text_single = {
                      layoutpolicy_horizontal = preferred
                      fontsize = 13
                      size = { 0 22 }
                      text = "YYZ_CHARACTER_LIST_VIEW_GOLD"
                    }
                    text_single = {
                      layoutpolicy_horizontal = preferred
                      fontsize = 13
                      size = { 0 22 }
                      text = "YYZ_CHARACTER_LIST_VIEW_PRESTIGE"
                    }
                    text_single = {
                      layoutpolicy_horizontal = preferred
                      fontsize = 13
                      size = { 0 22 }
                      text = "YYZ_CHARACTER_LIST_VIEW_PIETY"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  type yyz_widget_character_finder_list_item = widget {
    datacontext = "[Scope.GetCharacter]"
    
    block "divider" {}
    block "widget" {}

    layoutpolicy_horizontal = preferred
    layoutpolicy_vertical = preferred

    yyz_wide_character_hbox = {
      size = { 100% 94 }
      visible = yes
    }
    
    hbox = {
      visible = no
      size = { 100% 94 }
      yyz_narrow_character_hbox = { }
      yyz_narrow_character_hbox = { }
    }
  }


  type yyz_narrow_character_hbox = hbox {
#    spacing = 5
#    size = { 500 180 }
  
    background = {
      using = Background_Area_With_Header
      margin_right = 7
      margin_left = 5
    }
  
    portrait_head = {}
  
    vbox = {
      layoutpolicy_horizontal = expanding
      layoutpolicy_vertical = expanding
      margin_top = 3
  
      hbox = {
        layoutpolicy_horizontal = expanding
#        min_width = 300
  
        text_single = {
          name = "name"
          layoutpolicy_horizontal = expanding
          autoresize = no
          text = "[Character.GetUINameNoTooltip]"
          using = Font_Size_Medium
          align = nobaseline
          fontsize_min = 14
          margin_right = 10
        }
        yyz_hbox_skills_grid = {}
#        hbox_skills_grid = {}
      }
  
      vbox = {
        layoutpolicy_horizontal = expanding
        margin = { 0 3 }
        margin_bottom = 8
  
        hbox = {
          layoutpolicy_horizontal = expanding
          spacing = 3
  
          text_single = {
            name = "relation_to_court_owner"
            default_format = "#low"
            align = nobaseline
            max_width = 370
            visible = "[Not(Character.IsHostage)]"
  
            block "description_relation_text" {
              text = "[Character.GetRelationToString( CharacterWindow.GetCourtOwner )]"
              tooltip = "EXTENDED_RELATIONS_TOOLTIP"
            }
  
            background = {
              visible = "[Character.IsImprisoned]"
              using = Status_Bad
              alpha = 0.5
            }
          }
  
            text_single = {
            name = "relation_to_court_hostage"
            default_format = "#medium"
            align = nobaseline
            visible = "[Character.IsHostage]"
  
            block "description_relation_text" {
              text = "[Character.GetRelationToString( CharacterWindow.GetCourtOwner )]"
              tooltip = "EXTENDED_RELATIONS_TOOLTIP"
            }
  
            background = {
              visible = "[Character.IsHostage]"
              using = Status_Mixed
              alpha = 0.5
            }
          }
          expand = {}
        }
      }
  
      hbox = {
        layoutpolicy_horizontal = expanding
        spacing = 5
        margin_bottom = 5
  
        hbox = {
          layoutpolicy_horizontal = expanding
          layoutpolicy_vertical = expanding
          minimumsize = { 0 60 }
          margin_left = 5
  
          background = {
            using = Background_Area_Dark
            margin = { 3 3 }
            alpha = 0.5
          }
  
          # Dynasty
          widget = {
            layoutpolicy_vertical = expanding
            size = { 45 40 }
  
            coa_house_small = {
              datacontext = "[Character.GetHouse]"
              parentanchor = center
              scale = 0.7
            }
          }
  
          # Traits
          vbox = {
            layoutpolicy_vertical = expanding
            margin = { 10 0 }
  
            hbox = {
              layoutpolicy_horizontal = expanding
  
              fixedgridbox = {
                name = "traits_grid_five"
                datamodel = "[CharacterListItem.GetTraits]"
                flipdirection = yes
                addcolumn = 30
                addrow = 28
  
                block "gridbox_items"   ### for characterview
                {
                  datamodel_wrap = 5
                  maxverticalslots = 2
                }
  
                item = {
                  icon_trait = {
                    visible = "[Trait.IsValid]"
  
                    blockoverride "icon_size"         { size = { 30 30 } }
                    blockoverride "tooltip_placement" { using = tooltip_se }
                    blockoverride "glow_radius"       { glow_radius = 3 }
                  }
                }
              }
  
              expand = {}
            }
          }
          expand = {}
          divider_light = {
            layoutpolicy_vertical = expanding
            alpha = 0.5
          }
          hbox = {
            margin = { 3 0 }
  
            widget_list_claims = { visible = "[Not( IsDataModelEmpty( CharacterListItem.GetTitleItems ) )]" }
          }
  
          divider_light = {
            visible = "[Not( IsDataModelEmpty( CharacterListItem.GetTitleItems ) )]"
            layoutpolicy_vertical = expanding
            alpha = 0.5
          }
  
          hbox = {
            margin_right = 5
  
            button_religion_icon = {
              datacontext = "[Character.GetFaith]"
              size = { 40 40 }
            }
  
            vbox = {
              datacontext = "[Character.GetCulture]"
  
              tooltipwidget = { culture_tooltip = {} }
              using = tooltip_se
  
              text_single = {
                layoutpolicy_horizontal = expanding
                min_width = 60
                align = center|nobaseline
                autoresize = no
                text = "CULTURE_LISTS_WINDOW"
              }
            }
          }
        }
      }
    }
  }
  
  type yyz_skillitem_sort_icon_below = icon {
    frame = "[BoolTo1And2(CharacterSelectionList.GetSortOrder)]"
    alwaystransparent = yes
    parentanchor = bottom|hcenter
    position = { 0 10 }
    texture = "gfx/interface/buttons/button_sort_toggle.dds"
    framesize = { 36 36 }
    size = { 18 18 }
    using = Master_Button_Modify_Texture

    blockoverride "master_color_frame" { frame = 1 }
  }

  type button_skill_box = button_standard_hover {
      size = { 32 32 }
    
    icon = {
      block "custom_icon" {
        texture = "gfx/interface/icons/icon_skills.dds"
        size = { 32 32 }
      }
      parentanchor = center

      block "icon_framesize" { framesize = { 60 60 } }
      block "icon_frame"     { frame = 1 }
    }
    using = tooltip_below

    onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
    tooltip = "[ScriptedGui.BuildTooltip( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"

    yyz_skillitem_sort_icon_below = {
      visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
      frame = "[BoolTo1And2(GetScriptedGui( 'yyz_change_sort_order' ).IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End ) )]"
    }
  }

  type yyz_hbox_list_sort_buttons = hbox {
    name = "yyz_sort_buttons"
    margin_left = 10
    margin_right = 20 # yyz default 20
    margin_top = 2
    spacing = 0
    allow_outside = yes
    ignoreinvisible = yes

    divider_light = { size = { 3 20 } }

    widget = {
#      size = { 225 33 }
      size = { 99 33 }
    }      
    expand = {}

    block "skill_sort_buttons"
    {
      hbox = {
        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_army_speed' )]"
          name = "stat_army_speed"
          blockoverride "custom_icon" {
            texture = "gfx/interface/icons/combat_effects/moving_army.dds"
            size = { 28 28 }
          }
          blockoverride "icon_framesize" { }
          blockoverride "icon_frame" { }
        }
        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_travel_speed' )]"
          name = "stat_travel_speed"
          blockoverride "custom_icon" {
            texture = "gfx/interface/icons/travel/travel_speed_icon.dds"
            size = { 28 28 }
          }
          blockoverride "icon_framesize" { }
          blockoverride "icon_frame" { }
        }
        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_travel_safety' )]"
          name = "stat_travel_safety"
          blockoverride "custom_icon" {
            texture = "gfx/interface/icons/travel/travel_safety_icon.dds"
            size = { 28 28 }
          }
          blockoverride "icon_framesize" { }
          blockoverride "icon_frame" { }
        }

        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_gold' )]"
          name = "stat_gold"
          blockoverride "custom_icon" {
            texture = "gfx/interface/icons/icon_gold.dds"
            size = { 28 28 }
          }
          blockoverride "icon_framesize" { }
          blockoverride "icon_frame" { }
        }
        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_prestige' )]"
          name = "stat_prestige"
          blockoverride "custom_icon" {
            texture = "gfx/interface/icons/currencies/icon_prestige_03.dds"
            size = { 28 28 }
          }
          blockoverride "icon_framesize" { }
          blockoverride "icon_frame" { }
        }

        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_piety' )]"
          name = "stat_piety"
          blockoverride "custom_icon" {
            texture = "gfx/interface/icons/currencies/icon_piety_christian_02.dds"
            size = { 28 28 }
          }
          blockoverride "icon_framesize" { }
          blockoverride "icon_frame" { }
        }

        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_age' )]"
          name = "stat_age"
          blockoverride "custom_icon" {
            texture = "gfx/interface/icons/memory_types/birth.dds"
            size = { 28 28 }
          }
          blockoverride "icon_framesize" { }
          blockoverride "icon_frame" { }
        }

        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_health' )]"
          name = "stat_health"
          blockoverride "custom_icon" {
            texture = "gfx/interface/icons/character_status/icon_health.dds"
            size = { 28 28 }
          }
          blockoverride "icon_framesize" { framesize = { 60 60 } }
          blockoverride "icon_frame" { }
        }

        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_diplomacy' )]"
          name = "stat_diplomacy"
        }

        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_martial' )]"
          name = "stat_martial"
          blockoverride "icon_frame" { frame = 2 }
        }

        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_stewardship' )]"
          name = "stat_stewardship"
          blockoverride "icon_frame" { frame = 3 }
        }

        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_intrigue' )]"
          name = "stat_intrigue"
          blockoverride "icon_frame" { frame = 4 }
        }

        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_learning' )]"
          name = "stat_learning"
          blockoverride "icon_frame" { frame = 5 }
        }

        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_prowess' )]"
          name = "stat_prowess"
          blockoverride "icon_frame" { frame = 6 }
        }
      }
    }
  }

  type yyz_character_presentation_traits = widget {

    layoutpolicy_vertical = expanding
    size = { 248 60 }

    background = {
      using = Background_Area_Dark
      alpha = 0.4
      margin = { 0 2 }
    }

    fixedgridbox = { name = "traits_grid"
      datamodel = "[Character.GetTraitIndices]"
      datamodel_reuse_widgets = yes
      flipdirection = yes
      layoutpolicy_horizontal = expanding
      layoutpolicy_vertical = expanding
      addcolumn = 30
      addrow = 28

      min_width = 240
      datamodel_wrap = 10
      maxverticalslots = 2

      parentanchor = vcenter
      widgetanchor = vcenter

      item = {
        icon_trait = {
          datacontext = "[GetTraitForIndex(int32.GetInt)]"
          visible = "[Trait.IsValid]"

          blockoverride "icon_size"         { size = { 30 30 }   }
          blockoverride "tooltip_placement" { using = tooltip_se }
          blockoverride "glow_radius"       { glow_radius = 3    }
        }
      }
    }
  }
}