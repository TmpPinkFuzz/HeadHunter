
template yyz_skill_grid_text
{
  parentanchor = center
  margin_bottom = 4
  align = center
}

template yyz_invite_button
{
  button_icon = {
    name = "button_invite"
    datacontext = "[GetScriptedGui('yyz_canInvite')]"
    texture = "gfx/interface/icons/character_interactions/guest.dds"
    visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( Character.MakeScope ).AddScope( 'actor', GetPlayer.MakeScope ).End)]"
    size = { 20 20 }
  }
}

template yyz_pin_unpin
{
  button_pin = {
    name = "button_pin"
    size = { 20 20 }
    visible = "[Not(Character.IsPinned)]"
    onclick = "[Character.ToggleCharacterPinned]"
    tooltip = "PIN_TT"
    using = tooltip_se
  }

  button_unpin = {
    name = "button_unpin"
    size = { 20 20 }
    visible = "[Character.IsPinned]"
    onclick = "[Character.ToggleCharacterPinned]"
    tooltip = "PIN_TT"
    using = tooltip_se
  }
}

template yyz_skill_grid_background
{
  name = "skill_icon_bg"
  texture = "gfx/interface/window_character/character_view_skills_bg.dds"
  framesize = { 70 26 }
  margin = { 5 0 }
}

template filter_sex
{
  yyz_toolbar_button = {
    name = "btn_filterSex_male"
    datacontext = "[GetScriptedGui('yyz_filterSexMale_toggle')]"
    tooltip = "YYZ_FILTER_SEX_MALE_TT"
    blockoverride "icon" {
      texture = "gfx/interface/icons/flat_icons/male.dds"
      size = { 24 24 }
    }
  }

  yyz_toolbar_button = {
    name = "btn_filterSex_female"
    datacontext = "[GetScriptedGui('yyz_filterSexFemale_toggle')]"
    tooltip = "YYZ_FILTER_SEX_FEMALE_TT"
    blockoverride "icon" {
      texture = "gfx/interface/icons/flat_icons/female.dds"
      size = { 24 24 }
    }
  }

  spacer = { size = { 6 0 } }
}

template filter_where
{
  yyz_button = {
    size = { 24 32 }
    name = "btn_filterWhere_not"
    text = "YYZ_FILTER_WHERE_NOT"
    datacontext = "[GetScriptedGui('yyz_filterWhereNot_toggle')]"
    tooltip = "YYZ_FILTER_WHERE_NOT_TT"
  }

  yyz_button = {
    size = { 58 32 }
    name = "btn_filterWhere_realm"
    text = "YYZ_FILTER_WHERE_REALM"
    datacontext = "[GetScriptedGui('yyz_filterWhereRealm_toggle')]"
    tooltip = "YYZ_FILTER_WHERE_REALM_TT"
  }

  yyz_button = {
    size = { 58 32 }
    name = "btn_filterWhere_court"
    text = "YYZ_FILTER_WHERE_COURT"
    datacontext = "[GetScriptedGui('yyz_filterWhereCourt_toggle')]"
    tooltip = "YYZ_FILTER_WHERE_COURT_TT"
  }
  spacer = { size = { 6 0 } }
}

template filter_marital
{
  yyz_button = {
    size = { 64 32 }
    name = "btn_filterMarital_married"
    text = "YYZ_FILTER_MARITAL_MARRIED"
    datacontext = "[GetScriptedGui('yyz_filterMaritalMarried_toggle')]"
    tooltip = "YYZ_FILTER_MARITAL_MARRIED_TT"
  }

  yyz_button = {
    size = { 78 32 }
    name = "btn_filterMarital_unmarried"
    text = "YYZ_FILTER_MARITAL_UNMARRIED"
    datacontext = "[GetScriptedGui('yyz_filterMaritalUnmarried_toggle')]"
    tooltip = "YYZ_FILTER_MARITAL_UNMARRIED_TT"
  }                   
  spacer = { size = { 6 0 } }
}

template filter_nobility
{
  yyz_button = {
    size = { 64 32 }
    name = "btn_filterNobilityNoble_toggle"
    text = "YYZ_FILTER_NOBILITY_NOBLE"
    datacontext = "[GetScriptedGui('yyz_filterNobilityNoble_toggle')]"
    tooltip = "YYZ_FILTER_NOBILITY_NOBLE_TT"
  }

  yyz_button = {
    size = { 78 32 }
    name = "btn_filterNobilityLowborn_toggle"
    text = "YYZ_FILTER_NOBILITY_LOWBORN"
    datacontext = "[GetScriptedGui('yyz_filterNobilityLowborn_toggle')]"
    tooltip = "YYZ_FILTER_NOBILITY_LOWBORN_TT"
  }                   
  spacer = { size = { 6 0 } }
}

template filter_invite
{
  yyz_button = {
    size = { 66 32 }
    name = "btn_filterInvite"
    text = "YYZ_FILTER_INVITE"
    datacontext = "[GetScriptedGui('yyz_filterInvite_toggle')]"
    tooltip = "YYZ_FILTER_INVITE_TT"
  }
  spacer = { size = { 6 0 } }
}

### LIST TEMPLATE
types yyz_character_list_types {
  type yyz_header_text = text_single {
    name = "header_text"

    using = Font_Type_Flavor
    using = Font_Size_Big
    margin_left = 10
  }

  #######################################################################################
  # used for the 0 0 size hidden buttons backing the shortcut keys to get our window open
  #######################################################################################
  type yyz_character_list_shortcut = button_normal {
    block "command" {
      datacontext = "[GetScriptedGui('open_yyz_YYZ_list')]"                   
    }
    
    block "cmd_key" {
      shortcut = "NO_DEFAULT_KEY"
    }
    
    onclick = "[ExecuteConsoleCommand( Select_CString( GetVariableSystem.Exists('yyz_character_list_window'), '', 'gui.createwidget gui/yyz_gui.gui yyz_character_list_window' ) )]"
    onclick = "[GetVariableSystem.Set('yyz_character_list_opened', 'true')]"
    onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
  }

  ##############################################################################################
  # used by our main toolbar - hopefully this will get merged into one of the other button types
  ############################################################################################## 
#  type yyz_toolbar_button = button_hud_character_bar {

  type yyz_toolbar_button = button_standard_hover {
    size = { 32 32 }
    button_icon = {
      block "icon" {
        texture = "gfx/interface/icons/flat_icons/dynasty.dds"
        size = { 32 32 }
      }
      alwaystransparent = yes
      parentanchor = center
    }
    using = tooltip_nw
    onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
    visible = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
    down    = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
  }

  type yyz_button = button_standard_hover {
    using = tooltip_nw
    onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
    visible = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
    down    = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
  }

#    gfxtype = togglepushbuttongfx
#    button_normal = {
#      using = Animation_Glow_Pulse
#      glow = {
#        using = Color_Green
#        using = Glow_Standard
#        block "glow_radius"
#        {
#          glow_radius = 3
#        }
#      }
#      alwaystransparent = no
#      effectname = "NoHighlight"
#      gfxtype = togglepushbuttongfx
#      shaderfile = "gfx/FX/pdxgui_pushbutton.shader"

  type yyz_vbox_character_list = vbox {
    name = "yyz_character_list"
    spacing = 0   # yyz
    allow_outside = no
    margin_left = -14 # yyz - pushing left side further left
    block "sort_buttons"
    {
      yyz_hbox_list_sort_buttons = {
#        visible = "[GetScriptedGui( 'clear_yyz_character_list' ).IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
        layoutpolicy_horizontal = expanding
      }
    }

    block "special_character" {}

    scrollbox = {
      name = "yyz_characters_scroll_area"
      layoutpolicy_vertical = expanding
      layoutpolicy_horizontal = expanding

      blockoverride "scrollbox_content" {
        block "container_implementation" {
          vbox = {                
            name = "characters_grid"
            datamodel = "[GetPlayer.MakeScope.GetList('yyz_list')]"
            visible = "[GetScriptedGui('yyz_window').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
            layoutpolicy_horizontal = expanding
             
            item = {
              yyz_widget_character_list_item_finder = {
                datacontext = "[Scope.GetCharacter]"
                block "item_size" {
                  size = { -1 90 }  # yyz reduced from 110
                  layoutpolicy_horizontal = expanding
                }
              }
            }
          }
        }
      }

      blockoverride "scrollbox_empty"
      {
      }
    }
  }

  type yyz_hbox_skills_grid = hbox {
    name = "yyz_skills_grid"
    minimumsize = { 160 0 }
    widget = {
      size = { 32 25 }

      text_single = {
        using = yyz_skill_grid_text
        text = "[Character.GetSkill( 'diplomacy' )]"
      }
      background = { using = yyz_skill_grid_background block "bg" { frame = 1 } }
    }

    widget = {
      size = { 32 25 }

      text_single = {
        using = yyz_skill_grid_text
        text = "[Character.GetSkill( 'martial' )]"
      }
      background = { using = yyz_skill_grid_background block "bg" { frame = 2 } }
    }

    widget = {
      size = { 32 25 }

      text_single = {
        name = "value"
        using = yyz_skill_grid_text
        text = "[Character.GetSkill( 'stewardship' )]"
      }
      background = { using = yyz_skill_grid_background block "bg" { frame = 3 } }
    }
    
    widget = {
      size = { 32 25 }

      text_single = {
        name = "value"
        using = yyz_skill_grid_text
        text = "[Character.GetSkill( 'intrigue' )]"
      }
      background = { using = yyz_skill_grid_background block "bg" { frame = 4 } }
    }

    widget = {
      size = { 32 25 }

      text_single = {
        name = "value"
        using = yyz_skill_grid_text
        text = "[Character.GetSkill( 'learning' )]"
      }
      background = { using = yyz_skill_grid_background block "bg" { frame = 5 } }
    }

    widget = {
      size = { 32 25 }
      text_single = {
        name = "value"
        using = yyz_skill_grid_text
        text = "[Character.GetSkill( 'prowess' )]"
        background = {
          name = "skill_icon_bg"
          texture = "gfx/interface/window_character/character_view_prowess_bg.dds"
          framesize = { 32 32 }
          margin = { 14 0 }
        }
      }
    }
  }

  type yyz_widget_character_list_item_finder = widget {
    datacontext = "[Scope.GetCharacter]"
    size = { 200 94 }

    background = {
      visible = "[GetScriptedGui( 'yyz_even_index' ).IsShown( GuiScope.SetRoot( Character.MakeScope ).End ) ]"
      using = Background_Area_Dark
      margin_top = -4
      margin_bottom = 2
      alpha = 0.5
    }
    block "divider" {}
    block "widget" {}

    hbox = {
      layoutpolicy_horizontal = expanding
      vbox = {
        layoutpolicy_vertical = expanding
        portrait_head_small = {}

        expand = {}
      }
      block "button_content"
      {
        hbox = {
          layoutpolicy_horizontal = expanding
          layoutpolicy_vertical = expanding
          margin_top = 2

          vbox = {
            layoutpolicy_horizontal = expanding
            layoutpolicy_vertical = expanding

            # Name and age
            hbox = {
              layoutpolicy_horizontal = expanding
              margin = { 0 1 }
              margin_left = 0
              margin_right = 0

              background = {
                using = Background_Area_Characterlist
              }

              background = {
                using = Background_Area_Dark
                modify_texture = {
                  texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
                  blend_mode = alphamultiply
                  alpha = 1
                  rotate_uv = -90
                }
              }

              hbox = {
                margin_left = 0
                layoutpolicy_horizontal = expanding
#                maximumsize = { 338 -1 }  # yyz - removed to get skill values and age/health hbox to align to far right

                button_icon = {
                  name = "button_invite"
                  datacontext = "[GetScriptedGui('yyz_canInvite')]"
                  texture = "gfx/interface/icons/character_interactions/guest.dds"
                  visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( Character.MakeScope ).AddScope( 'actor', GetPlayer.MakeScope ).End)]"
                  onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Character.MakeScope ).AddScope( 'actor', GetPlayer.MakeScope ).End)]"
                  size = { 20 20 }
                }
                button_pin = {
                  name = "button_pin"
                  visible = "[Not(Character.IsPinned)]"
                  onclick = "[Character.ToggleCharacterPinned]"
                  tooltip = "PIN_TT"
                  using = tooltip_se
                  size = { 20 20 }
                }
                button_unpin = {
                  name = "button_unpin"
                  visible = "[Character.IsPinned]"
                  onclick = "[Character.ToggleCharacterPinned]"
                  tooltip = "PIN_TT"
                  using = tooltip_se
                  size = { 20 20 }
                }

                text_single = {
                  using = Font_Size_Medium
                  layoutpolicy_horizontal = expanding
                  align = nobaseline
                  text = "[Character.GetUINameNoTooltip]"
                  autoresize = no
                  fontsize_min = 14
                }

                block "character_relation"
                {
                  hbox = {
                    visible = "[And(Character.HasRelationTo( GetPlayer ), Not(Character.IsPlayer))]"
                    text_single = {
#                      text = "•"
                      align = nobaseline
                      margin = { 5 0 }
                    }

                    text_single = {
                      name = "character_relation"
                      text = "[Character.GetRelationToString( GetPlayer )]"
                      default_format = "#low"
                      align = nobaseline
                      fontsize_min = 14
                      max_width = 180
                    }
                  }
                }
                expand = {}
              }

              hbox = {
                using = character_age_or_death_text
              }

              # Skills
              yyz_hbox_skills_grid = {}
            }

            ### BOTTOM ROW ###
            hbox = {
              layoutpolicy_horizontal = expanding
              layoutpolicy_vertical = expanding
              
              vbox = {
                layoutpolicy_horizontal = expanding

                block "additional_info_kill_list" {}

                hbox = {
                  layoutpolicy_horizontal = expanding

                  # Dynasty
                  widget = {
                    size = { 45 40 }

                    coa_house_small = {
                      datacontext = "[Character.GetHouse]"
                      parentanchor = center
                      scale = 0.7
                    }
                  }

                  # Traits
                  yyz_character_presentation_traits = {
#                    position = { 50 0 }
                  }
                  expand = {}
                }
              }
              vbox = {
                datacontext = "[Scope.GetCharacter]"
                layoutpolicy_horizontal = expanding
                layoutpolicy_vertical = expanding

                block "bottom_right_box"
                {
                  hbox = {
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    max_width = 180
                    background = {
                      using = Background_Area_Dark
                      alpha = 0.5
                      margin = { 0 2 }
                    }


#                    yyz_widget_list_claims = {}
                    
                    vbox = {
                      # Religion and culture
                      layoutpolicy_horizontal = expanding
                      layoutpolicy_vertical = expanding
                      
                      hbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                        margin_left = 2
                        margin_right = 4
                        spacing = 2

                        icon = {
                          name = "faith_button"
                          size = { 38 38 }
                          datacontext = "[Character.GetFaith]"
                          tooltipwidget = { faith_tooltip = {} }
                          using = tooltip_se
                          texture = "[Faith.GetIcon]"
                        }

                        hbox = {
                          datacontext = "[Character.GetCulture]"
                          layoutpolicy_horizontal = expanding
                          spacing = 3

                          tooltipwidget = {
                            culture_tooltip = {}
                          }
                          using = tooltip_se

# yyz:  seriously, what is the purpose of the culture icon here at all?
#
#                         icon = {
#                           name = "culture"
#                           texture = "gfx/interface/icons/icon_culture.dds"
#                           size = { 24 24 }
#                         }

                          text_single = {
                            layoutpolicy_horizontal = expanding
                            text = "CULTURE_LISTS_WINDOW"
                            autoresize = no
                            align = nobaseline
                          }
                        }
                      }
                      hbox = {
                        visible = "[GetScriptedGui( 'yyz_speedPanel' ).IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                        margin_left = -60
                        size = { 0 22 }
                        spacing = 2
                        text_single = {              
                          align = left
                          fontsize = 13
                          text = "YYZ_ARMY_SPEED_DISPLAY"
                        }
                        text_single = {              
                          align = left
                          fontsize = 13
                          text = "YYZ_TRAVEL_SPEED_DISPLAY"
                          tooltip = "[Character.GetTravelSpeedAptitudeBreakdown]"
                        }
                        text_single = {              
                          align = left
                          fontsize = 13
                          text = "YYZ_TRAVEL_SAFETY_DISPLAY"
                          tooltip = "[Character.GetTravelSafetyAptitudeBreakdown]"
                        } 
                      }
                    }
                    vbox = {
                      visible = "[GetScriptedGui( 'yyz_currencyPanel' ).IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"

                      datacontext = "[Character]"
                      layoutpolicy_horizontal = fixed
                      margin_left = 0
                      margin_right = 0
                      margin_top = 0
                      margin_bottom = 0
                                  
                      max_width = 50
                      text_single = {
                        layoutpolicy_horizontal = preferred
                        fontsize = 13
                        size = { 0 22 }
                        text = "YYZ_CHARACTER_LIST_VIEW_GOLD"
                      }
                      text_single = {
                        layoutpolicy_horizontal = preferred
                        fontsize = 13
                        size = { 0 22 }
                        text = "YYZ_CHARACTER_LIST_VIEW_PRESTIGE"
                      }
                      text_single = {
                        layoutpolicy_horizontal = preferred
                        fontsize = 13
                        size = { 0 22 }
                        text = "YYZ_CHARACTER_LIST_VIEW_PIETY"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  type skillitem_sort_icon_below = icon {
    frame = "[BoolTo1And2(CharacterSelectionList.GetSortOrder)]"
    alwaystransparent = yes
    parentanchor = bottom|hcenter
    position = { 0 10 }
    texture = "gfx/interface/buttons/button_sort_toggle.dds"
    framesize = { 36 36 }
    size = { 18 18 }
    using = Master_Button_Modify_Texture

    blockoverride "master_color_frame" {
      frame = 1
    }
  }

  type button_skill_box = button_standard_hover {
      size = { 32 32 }
    
    icon = {
      block "custom_icon" {
        texture = "gfx/interface/icons/icon_skills.dds"
        size = { 32 32 }
      }
      parentanchor = center
      block "icon_framesize" {
        framesize = { 60 60 }
      }
      block "icon_frame" {
        frame = 1  
      }
    }
    using = tooltip_below

    onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
    tooltip = "[ScriptedGui.BuildTooltip( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"

    skillitem_sort_icon_below = {
      visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
      frame = "[BoolTo1And2(GetScriptedGui( 'yyz_change_sort_order' ).IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End ) )]"
    }
  }

  type yyz_hbox_list_sort_buttons = hbox {
    name = "yyz_sort_buttons"
    margin_left = 10
    margin_right = 20 # yyz default 20
    margin_top = 2
    spacing = 0
    allow_outside = yes
    ignoreinvisible = yes

    divider_light = {
      size = { 3 20 }
    }

    widget = {
#      size = { 225 33 }
      size = { 99 33 }
    }      
    expand = {}

    block "skill_sort_buttons"
    {
      hbox = {
        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_army_speed' )]"
          name = "stat_army_speed"
          blockoverride "custom_icon" {
            texture = "gfx/interface/icons/combat_effects/moving_army.dds"
            size = { 28 28 }
          }
          blockoverride "icon_framesize" { }
          blockoverride "icon_frame" { }
        }
        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_travel_speed' )]"
          name = "stat_travel_speed"
          blockoverride "custom_icon" {
            texture = "gfx/interface/icons/travel/travel_speed_icon.dds"
            size = { 28 28 }
          }
          blockoverride "icon_framesize" { }
          blockoverride "icon_frame" { }
        }
        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_travel_safety' )]"
          name = "stat_travel_safety"
          blockoverride "custom_icon" {
            texture = "gfx/interface/icons/travel/travel_safety_icon.dds"
            size = { 28 28 }
          }
          blockoverride "icon_framesize" { }
          blockoverride "icon_frame" { }
        }

        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_gold' )]"
          name = "stat_gold"
          blockoverride "custom_icon" {
            texture = "gfx/interface/icons/icon_gold.dds"
            size = { 28 28 }
          }
          blockoverride "icon_framesize" { }
          blockoverride "icon_frame" { }
        }
        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_prestige' )]"
          name = "stat_prestige"
          blockoverride "custom_icon" {
            texture = "gfx/interface/icons/currencies/icon_prestige_03.dds"
            size = { 28 28 }
          }
          blockoverride "icon_framesize" { }
          blockoverride "icon_frame" { }
        }

        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_piety' )]"
          name = "stat_piety"
          blockoverride "custom_icon" {
            texture = "gfx/interface/icons/currencies/icon_piety_christian_02.dds"
            size = { 28 28 }
          }
          blockoverride "icon_framesize" { }
          blockoverride "icon_frame" { }
        }

        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_age' )]"
          name = "stat_age"
          blockoverride "custom_icon" {
            texture = "gfx/interface/icons/memory_types/birth.dds"
            size = { 28 28 }
          }
          blockoverride "icon_framesize" { }
          blockoverride "icon_frame" { }
        }

        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_health' )]"
          name = "stat_health"
          blockoverride "custom_icon" {
            texture = "gfx/interface/icons/modifiers/health_positive.dds"
            size = { 28 28 }
          }
          blockoverride "icon_framesize" { }
          blockoverride "icon_frame" { }
        }

        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_diplomacy' )]"
          name = "stat_diplomacy"
        }

        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_martial' )]"
          name = "stat_martial"
          blockoverride "icon_frame" {
            frame = 2
          }
        }

        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_stewardship' )]"
          name = "stat_stewardship"
          blockoverride "icon_frame" {
            frame = 3
          }
        }

        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_intrigue' )]"
          name = "stat_intrigue"
          blockoverride "icon_frame" {
            frame = 4
          }
        }

        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_learning' )]"
          name = "stat_learning"
          blockoverride "icon_frame" {
            frame = 5
          }
        }

        button_skill_box = {
          datacontext = "[GetScriptedGui( 'yyz_sort_by_prowess' )]"
          name = "stat_prowess"
          blockoverride "icon_frame" {
            frame = 6
          }
        }
      }
    }
  }

  type yyz_character_presentation_traits = widget {

    layoutpolicy_vertical = expanding
    size = { 248 60 }

    background = {
      using = Background_Area_Dark
      alpha = 0.4
      margin = { 0 2 }
    }

    fixedgridbox = { name = "traits_grid"
      datamodel = "[Character.GetTraitIndices]"
      datamodel_reuse_widgets = yes
      flipdirection = yes
      layoutpolicy_horizontal = expanding
      layoutpolicy_vertical = expanding
      addcolumn = 30
      addrow = 28

      min_width = 240
      datamodel_wrap = 10
      maxverticalslots = 2

      parentanchor = vcenter
      widgetanchor = vcenter

      item = {
        icon_trait = {
          datacontext = "[GetTraitForIndex(int32.GetInt)]"
          visible = "[Trait.IsValid]"

          blockoverride "icon_size"
          {
            size = { 30 30 }
          }

          blockoverride "tooltip_placement"
          {
            using = tooltip_se
          }

          blockoverride "glow_radius"
          {
            glow_radius = 3
          }
        }
      }
    }
  }
}